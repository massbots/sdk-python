openapi: 3.1.0

info:
  version: '$VERSION'
  title: 'massbots.dl'
  termsOfService: 'https://telegra.ph/massbotsdl-08-25'
  contact:
    name: 'Support'
    url: 'https://t.me/MassbotsDevTeamBot'
    email: 'sy.tgbot@gmail.com'
  description: |-
    Download API for YouTube videos with Telegram integration.
    <br>
    - <ins>[Terms](https://telegra.ph/massbotsdl-08-25)</ins>
    - <ins>[Support](https://t.me/MassbotsDevTeamBot)</ins>
    - <ins>[API SDK](https://github.com/massbots/sdk)</ins>
    - <ins>[Uptime](https://uptime.massbots.xyz)</ins>

servers:
  - url: https://api.massbots.xyz/

tags:
  - name: me
    x-displayName: Me
  - name: youtube
    description: Methods for accessing the most recent data powered by YouTube API.
    x-displayName: Youtube
  - name: video
    description: Methods for downloading videos for your Telegram Bot.
    x-displayName: Download

components:
  securitySchemes:
    Token:
      type: apiKey
      name: X-Token
      in: header
      description: To obtain your personal token, contact the support.
  parameters:
    BotId:
      name: X-Bot-Id
      in: header
      required: true
      schema:
        type: string
        description: Your Telegram Bot ID
  schemas:
    Error:
      type: object
      description: API error
      required:
        - error
      properties:
        error:
          type: string
    Balance:
      type: object
      description: Token balance in points.
      required:
        - balance
      properties:
        balance:
          type: integer
    Video:
      type: object
      description: YouTube video
      required:
        - id
        - title
        - description
        - url
        - published_at
        - category_id
        - channel_id
        - channel_title
        - channel_url
        - comment_count
        - like_count
        - view_count
        - thumbnails
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        published_at:
          type: string
        category_id:
          type: string
        channel_id:
          type: string
        channel_title:
          type: string
        channel_url:
          type: string
        comment_count:
          type: integer
        like_count:
          type: integer
        view_count:
          type: integer
        thumbnails:
          type: object
          additionalProperties:
            x-additionalPropertiesName: size
            $ref: '#/components/schemas/Thumbnail'
    Thumbnail:
      type: object
      description: YouTube thumbnail
      required:
        - url
        - width
        - height
      properties:
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
    Channel:
      type: object
      description: YouTube channel
      required:
        - id
        - title
        - description
        - url
        - banner_url
        - comment_count
        - subscriber_count
        - video_count
        - view_count
        - thumbnails
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        banner_url:
          type: string
        comment_count:
          type: integer
        subscriber_count:
          type: integer
        video_count:
          type: integer
        view_count:
          type: integer
        thumbnails:
          type: object
          additionalProperties:
            x-additionalPropertiesName: size
            $ref: '#/components/schemas/Thumbnail'
    VideoFormat:
      type: object
      description: Video format
      required:
        - format
        - cached
        - file_size
      properties:
        format:
          type: string
          description: Video resolution
        cached:
          type: boolean
          description: |-
            Set to `true` if the format is cached for quick downloading<br>
        file_size:
          type: integer
          description: |-
            File size in bytes, available only if video is not cached
    DownloadResult:
      type: object
      required:
        - status
        - file_id
      properties:
        status:
          type: string
          description: |-
            One of: `queued`, `downloading`, `ready`, `failed`
        file_id:
          type: string
          description: |-
            Telegram's `file_id` used for sending cached files

paths:
  # me
  /me/balance:
    get:
      tags:
        - me
      summary: Get balance
      description: Returns your current balance in points.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: []
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots
            
            mb = massbots.Api(os.environ["TOKEN"])
            
            balance = mb.balance()
            if balance < 1000:
              print("Balance is too low!")

  # info
  /video/{id}:
    get:
      tags:
        - youtube
      summary: Get video
      description: Retrieves details of a YouTube video by its ID.
      parameters:
        - name: id
          in: path
          description: Video ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
              example: {
                "id": "dQw4w9WgXcQ",
                "url": "https://youtube.com/watch?v=dQw4w9WgXcQ",
                "title": "Rick Astley - Never Gonna Give You Up (Official Music Video)",
                "description": "The official video for “Never Gonna Give You Up” by Rick Astley. \n\nThe new album 'Are We There Yet?' is out now: Download here: https://RickAstley.lnk.to/AreWeThereYetFA/itunes\n\n“Never Gonna Give You Up” was a global smash on its release in July 1987, topping the charts in 25 countries including Rick’s native UK and the US Billboard Hot 100.  It also won the Brit Award for Best single in 1988. Stock Aitken and Waterman wrote and produced the track which was the lead-off single and lead track from Rick’s debut LP “Whenever You Need Somebody”.  The album was itself a UK number one and would go on to sell over 15 million copies worldwide.\n\nThe legendary video was directed by Simon West – who later went on to make Hollywood blockbusters such as Con Air, Lara Croft – Tomb Raider and The Expendables 2.  The video passed the 1bn YouTube views milestone on 28 July 2021.\n\nSubscribe to the official Rick Astley YouTube channel: https://RickAstley.lnk.to/YTSubID\n\nFollow Rick Astley:\nFacebook: https://RickAstley.lnk.to/FBFollowID \nTwitter: https://RickAstley.lnk.to/TwitterID \nInstagram: https://RickAstley.lnk.to/InstagramID \nWebsite: https://RickAstley.lnk.to/storeID \nTikTok: https://RickAstley.lnk.to/TikTokID\n\nListen to Rick Astley:\nSpotify: https://RickAstley.lnk.to/SpotifyID \nApple Music: https://RickAstley.lnk.to/AppleMusicID \nAmazon Music: https://RickAstley.lnk.to/AmazonMusicID \nDeezer: https://RickAstley.lnk.to/DeezerID \n\nLyrics:\nWe’re no strangers to love\nYou know the rules and so do I\nA full commitment’s what I’m thinking of\nYou wouldn’t get this from any other guy\n\nI just wanna tell you how I’m feeling\nGotta make you understand\n\nNever gonna give you up\nNever gonna let you down\nNever gonna run around and desert you\nNever gonna make you cry\nNever gonna say goodbye\nNever gonna tell a lie and hurt you\n\nWe’ve known each other for so long\nYour heart’s been aching but you’re too shy to say it\nInside we both know what’s been going on\nWe know the game and we’re gonna play it\n\nAnd if you ask me how I’m feeling\nDon’t tell me you’re too blind to see\n\nNever gonna give you up\nNever gonna let you down\nNever gonna run around and desert you\nNever gonna make you cry\nNever gonna say goodbye\nNever gonna tell a lie and hurt you\n\n#RickAstley #NeverGonnaGiveYouUp #WheneverYouNeedSomebody #OfficialMusicVideo",
                "view_count": 1569639292,
                "comment_count": 2355854,
                "like_count": 17830800,
                "published_at": "2009-10-25T06:57:33Z",
                "category_id": "10",
                "channel_id": "UCuAXFkgsw1L7xaCfnd5JJOw",
                "channel_title": "Rick Astley",
                "channel_url": "https://youtube.com/channel/UCuAXFkgsw1L7xaCfnd5JJOw",
                "thumbnails": {
                  "default": {
                    "height": 90,
                    "url": "https://i.ytimg.com/vi/dQw4w9WgXcQ/default.jpg",
                    "width": 120
                  },
                  "high": {
                    "height": 360,
                    "url": "https://i.ytimg.com/vi/dQw4w9WgXcQ/hqdefault.jpg",
                    "width": 480
                  },
                  "maxres": {
                    "height": 720,
                    "url": "https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg",
                    "width": 1280
                  },
                  "medium": {
                    "height": 180,
                    "url": "https://i.ytimg.com/vi/dQw4w9WgXcQ/mqdefault.jpg",
                    "width": 320
                  },
                  "standard": {
                    "height": 480,
                    "url": "https://i.ytimg.com/vi/dQw4w9WgXcQ/sddefault.jpg",
                    "width": 640
                  }
                }
              }
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: [ ]
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots
            
            mb = massbots.Api(os.environ["TOKEN"])
            
            video = mb.video("dQw4w9WgXcQ")
            # Now you can use video fields:
            # video.title
            # video.channel_id
            # video.like_count
  /channel/{id}:
    get:
      tags:
        - youtube
      summary: Get channel
      description: Retrieves details of a YouTube channel by its ID.
      parameters:
        - name: id
          in: path
          description: Channel ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
              example: {
                "id": "UCuAXFkgsw1L7xaCfnd5JJOw",
                "url": "https://youtube.com/channel/UCuAXFkgsw1L7xaCfnd5JJOw",
                "title": "Rick Astley",
                "description": "'Free' Remaster out now!",
                "view_count": 2100929381,
                "comment_count": 0,
                "subscriber_count": 4150000,
                "video_count": 259,
                "banner_url": "https://yt3.googleusercontent.com/KBtTGhBjiM4CD9oUrQke85BALlD1Tt-QFh_AQqzJIQJXFUQt1mtS6jJjIJkQDEbphga9O1Kt",
                "thumbnails": null
              }
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: [ ]
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots
            
            mb = massbots.Api(os.environ["TOKEN"])
  
            video = mb.video("dQw4w9WgXcQ")
            channel = mb.channel(video.channel_id)
            # Now you can use channel fields:
            # channel.url
            # channel.title
            # channel.subscriber_count
  /search:
    get:
      tags:
        - youtube
      summary: Search videos
      description: YouTube search for videos by a query.
      parameters:
        - name: q
          in: query
          description: Query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
              example: [
                {
                  "id": "HyHNuVaZJ-k",
                  "url": "https://youtube.com/watch?v=HyHNuVaZJ-k",
                  "title": "Gorillaz - Feel Good Inc. (Official Video)",
                  "description": "Official HD Video for Gorillaz' fantastic track Feel Good Inc. Follow Gorillaz online: http://gorillaz.com http://facebook.com/Gorillaz ...",
                  "view_count": 875970755,
                  "comment_count": 0,
                  "like_count": 7318598,
                  "published_at": "2016-06-28T12:53:12Z",
                  "channel_id": "UCfIXdjDQH9Fau7y99_Orpjw",
                  "channel_title": "Gorillaz",
                  "channel_url": "https://youtube.com/channel/UCfIXdjDQH9Fau7y99_Orpjw",
                  "thumbnails": {
                    "default": {
                      "height": 90,
                      "url": "https://i.ytimg.com/vi/HyHNuVaZJ-k/default.jpg",
                      "width": 120
                    },
                    "high": {
                      "height": 360,
                      "url": "https://i.ytimg.com/vi/HyHNuVaZJ-k/hqdefault.jpg",
                      "width": 480
                    },
                    "medium": {
                      "height": 180,
                      "url": "https://i.ytimg.com/vi/HyHNuVaZJ-k/mqdefault.jpg",
                      "width": 320
                    }
                  }
                },
                {
                  "id": "1V_xRb0x9aw",
                  "url": "https://youtube.com/watch?v=1V_xRb0x9aw",
                  "title": "Gorillaz - Clint Eastwood (Official Video)",
                  "description": "The official music video for Gorillaz - Clint Eastwood Taken from Gorillaz debut Studio Album 'Gorillaz' released in 2001, which ...",
                  "view_count": 806265630,
                  "comment_count": 0,
                  "like_count": 7543185,
                  "published_at": "2016-06-28T12:18:36Z",
                  "channel_id": "UCfIXdjDQH9Fau7y99_Orpjw",
                  "channel_title": "Gorillaz",
                  "channel_url": "https://youtube.com/channel/UCfIXdjDQH9Fau7y99_Orpjw",
                  "thumbnails": {
                    "default": {
                      "height": 90,
                      "url": "https://i.ytimg.com/vi/1V_xRb0x9aw/default.jpg",
                      "width": 120
                    },
                    "high": {
                      "height": 360,
                      "url": "https://i.ytimg.com/vi/1V_xRb0x9aw/hqdefault.jpg",
                      "width": 480
                    },
                    "medium": {
                      "height": 180,
                      "url": "https://i.ytimg.com/vi/1V_xRb0x9aw/mqdefault.jpg",
                      "width": 320
                    }
                  }
                },
                ...
              ]
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: [ ]
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots
            
            mb = massbots.Api(os.environ["TOKEN"])

            videos = mb.search("Gorillaz")
            for video in videos:
              # Now you can use video fields:
              # video.title
              # video.channel_id
              # video.like_count

  # video
  /video/{id}/formats:
    get:
      tags:
        - video
      summary: Get video formats
      description: |-
        Returns available video formats for downloading.
        Formats that will be sent instantly are marked as `cached`.<br><br> 
        Use <ins>[Download video](#tag/video/GET/video/{id}/download/{f})</ins>
        to start a new downloading.
      parameters:
        - $ref: '#/components/parameters/BotId'
        - name: id
          in: path
          description: Video ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoFormat'
              example: {
                "240p": {
                  "format": "240p",
                  "cached": false,
                  "file_size": 285299696
                },
                "360p": {
                  "format": "360p",
                  "cached": true
                },
                "480p": {
                  "format": "480p",
                  "cached": false,
                  "file_size": 484945829
                },
                "720p": {
                  "format": "720p",
                  "cached": true
                },
                "1080p": {
                  "format": "1080p",
                  "cached": true
                }
              }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: [ ]
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots
            
            mb = massbots.Api(
              token=os.environ["TOKEN"],
              bot_id=os.environ["BOT_ID"],
            )

            video = mb.video("dQw4w9WgXcQ")
            
            # Get the available formats from API
            formats = video.formats()
            
            # Transfer all cached formats instantly
            cached = formats.filter(cached=True)
            for format in cached.keys():
              result = video.download(format)
              # The file_id is now available to your bot
              print(result.file_id)
  /video/{id}/download/{f}:
    get:
      tags:
        - video
      summary: Download video
      description: |-
        Initiates video downloading in the specified format.
        Use the same method to get the status of downloading.
        Once the downloading is ready, `file_id` will be included in the response.
        If the format is already cached, the response will return the `file_id` instantly.
      parameters:
        - $ref: '#/components/parameters/BotId'
        - name: id
          in: path
          description: Video ID
          required: true
          schema:
            type: string
        - name: f
          in: path
          description: 'Format (e.g. 360p, 720p)'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResult'
              example: {
                "status": "ready",
                "file_id": "AAMCAgADGQEAARsVfGbaPX5yOjhZttGtxxvkGjd3-cs5AAKKWQACc3OpSoSXvt7TARNcAQAHbQADNgQ"
              }
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Token: [ ]
      x-codeSamples:
        - label: Python SDK
          lang: Python
          source: |-
            import os
            import massbots

            mb = massbots.Api(
              token=os.environ["TOKEN"],
              bot_id=os.environ["BOT_ID"],
            )

            video = mb.video("dQw4w9WgXcQ")
            download = video.download("1080p")
            
            # SDK has download result polling implemented already
            result = download.wait_until_ready()
            
            # The file_id is now available to your bot
            print(result.file_id)